<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF">
    <!-- Your shared resources -->
    <!-- Croissant Theme Styles -->
    <Style x:Key="CroissantTabItem" TargetType="TabItem">
        <Setter Property="Background" Value="#edb658"/>
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter ContentSource="Header"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#f0c985"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#f0c985"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantButton" TargetType="Button">
        <Setter Property="Background" Value="#edb658"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#f0c985"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFA000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#FFD54F"/>
                            <Setter Property="Foreground" Value="#A9A9A9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
    </Style>

    <Style x:Key="CroissantTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#d5a24b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantPasswordBox" TargetType="PasswordBox">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#d5a24b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Height" Value="40"/> 
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="3">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0"
                                                                Margin="6,3"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Center"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"/>
                                            <Path Grid.Column="1"
                                                    Width="8" Height="5"
                                                    Margin="0,0,6,0"
                                                    Fill="#8B4513"
                                                    Data="M 0 0 L 8 0 L 4 5 Z"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="#FFDAA4"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Background" Value="#FFE0B2"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter IsHitTestVisible="False"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <Popup Name="PART_Popup"
                                AllowsTransparency="true"
                                IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                            <Border BorderThickness="2"
                                    BorderBrush="#a87a4f"
                                    Background="#FFF8E1"
                                    CornerRadius="3">
                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                SnapsToDevicePixels="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#CCCCCC"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- The ItemContainerStyle for ComboBoxItems -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Border"
                                        Padding="5,3"
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        SnapsToDevicePixels="true"
                                        Background="Transparent">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FFDAA4"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#edb658"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
            
    <Style x:Key="CroissantScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#C19A6B" 
                            CornerRadius="3"
                            BorderBrush="#8B4513"
                            BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="#F5F5DC"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="MinWidth" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Up Button -->
                        <RepeatButton Grid.Row="0" 
                                    Command="ScrollBar.LineUpCommand" 
                                    Background="#F0EAD6"
                                    BorderBrush="#a87a4f"
                                    BorderThickness="1">
                            <Path Fill="#8B4513" 
                                Data="M 0 4 L 8 4 L 4 0 Z" 
                                Width="8" Height="4"/>
                        </RepeatButton>
                        
                        <!-- Scrollbar Track -->
                        <Track x:Name="PART_Track" 
                            Grid.Row="1" 
                            IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand" 
                                            Background="Transparent"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource CroissantScrollBarThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand" 
                                            Background="Transparent"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        
                        <!-- Down Button -->
                        <RepeatButton Grid.Row="2" 
                                    Command="ScrollBar.LineDownCommand" 
                                    Background="#F0EAD6"
                                    BorderBrush="#a87a4f"
                                    BorderThickness="1">
                            <Path Fill="#8B4513" 
                                Data="M 0 0 L 4 4 L 8 0 Z" 
                                Width="8" Height="4"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="14"/>
                <Setter Property="MinHeight" Value="14"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Left Button -->
                                <RepeatButton Grid.Column="0" 
                                            Command="ScrollBar.LineLeftCommand" 
                                            Background="#F0EAD6"
                                            BorderBrush="#a87a4f"
                                            BorderThickness="1">
                                    <Path Fill="#8B4513" 
                                        Data="M 4 0 L 0 4 L 4 8 Z" 
                                        Width="4" Height="8"/>
                                </RepeatButton>
                                
                                <!-- Scrollbar Track -->
                                <Track x:Name="PART_Track" 
                                    Grid.Column="1" 
                                    IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand" 
                                                    Background="Transparent"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource CroissantScrollBarThumb}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand" 
                                                    Background="Transparent"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                
                                <!-- Right Button -->
                                <RepeatButton Grid.Column="2" 
                                            Command="ScrollBar.LineRightCommand" 
                                            Background="#F0EAD6"
                                            BorderBrush="#a87a4f"
                                            BorderThickness="1">
                                    <Path Fill="#8B4513" 
                                        Data="M 0 0 L 4 4 L 0 8 Z" 
                                        Width="4" Height="8"/>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CroissantDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="#D2B48C"/>
        <Setter Property="Foreground" Value="#6B4E31"/>
        <Setter Property="BorderBrush" Value="#8B4513"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Header Content -->
                                <ContentPresenter Grid.Column="0"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                                <!-- Sort Direction Indicator -->
                                <Grid Grid.Column="1" Margin="5,0,0,0" Width="8" Height="10">
                                    <!-- Up Arrow (Ascending) -->
                                    <Path x:Name="SortArrowAsc"
                                        Width="8"
                                        Height="4"
                                        VerticalAlignment="Top"
                                        Stretch="Fill"
                                        Fill="#6B4E31"
                                        Opacity="0.3"
                                        Data="M 0,4 L 8,4 L 4,0 Z"/>
                                    
                                    <!-- Down Arrow (Descending) -->
                                    <Path x:Name="SortArrowDesc"
                                        Width="8"
                                        Height="4"
                                        VerticalAlignment="Bottom"
                                        Stretch="Fill"
                                        Fill="#6B4E31"
                                        Opacity="0.3"
                                        Data="M 0,0 L 8,0 L 4,4 Z"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E6CEA8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#C19A6B"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="SortArrowAsc" Property="Opacity" Value="0.3"/>
                            <Setter TargetName="SortArrowDesc" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrowAsc" Property="Opacity" Value="1"/>
                            <Setter TargetName="SortArrowDesc" Property="Opacity" Value="0.1"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrowAsc" Property="Opacity" Value="0.1"/>
                            <Setter TargetName="SortArrowDesc" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#F5F5DC"/>
        <Setter Property="Foreground" Value="#6B4E31"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>    
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="RowBackground" Value="#FDF5E6"/>
        <Setter Property="AlternatingRowBackground" Value="#F0EAD6"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource CroissantDataGridColumnHeaderStyle}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True"
                            CornerRadius="5">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <!-- Column Headers -->
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" 
                                                                    Grid.Column="0" Grid.Row="0"/>
                                        
                                        <!-- Empty content message -->
                                        <TextBlock Text="No items to display" 
                                                Grid.Column="0" Grid.Row="1"
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Foreground="#8B4513"
                                                FontStyle="Italic">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        
                                        <!-- DataGrid Items -->
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                            CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                            Grid.Column="0" Grid.Row="1"/>
                                        
                                        <!-- Scrollbars -->
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                Grid.Column="1" Grid.Row="1"
                                                Orientation="Vertical"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Value="{TemplateBinding VerticalOffset}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Style="{StaticResource CroissantScrollBarStyle}"/>
                                        
                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="0" Grid.Row="2"
                                                Orientation="Horizontal"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Value="{TemplateBinding HorizontalOffset}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Style="{StaticResource CroissantScrollBarStyle}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantDatePicker" TargetType="DatePicker">
        <Setter Property="Background" Value="#FFF8E1"/>
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="Calendar">
                    <Setter Property="Background" Value="#FFF8E1"/>
                    <Setter Property="Foreground" Value="#8B4513"/>
                    <Setter Property="BorderBrush" Value="#a87a4f"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Grid.Column="0" Grid.ColumnSpan="2"/>
                        <DatePickerTextBox x:Name="PART_TextBox" Text="Select Date" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" Padding="{TemplateBinding Padding}" BorderThickness="0" Background="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" Focusable="False" IsReadOnly="True"/>
                        <Button x:Name="PART_Button" Grid.Column="1" Width="30" Height="30" Padding="5,3" Margin="0,0,10,0" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" BorderThickness="0">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            <Path Width="10" Height="6" Fill="#8B4513" Data="M 0 0 L 10 0 L 5 6 Z" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" PlacementTarget="{Binding ElementName=PART_Root}">
                            <Calendar x:Name="PART_Calendar" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Style="{TemplateBinding CalendarStyle}" />
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CroissantCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#8B4513"/>
        <Setter Property="Background" Value="#FFF8E1"/>
        <Setter Property="BorderBrush" Value="#a87a4f"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                CornerRadius="3"
                                Width="18" Height="18"
                                VerticalAlignment="Center">
                            <Grid x:Name="markGrid">
                                <Path x:Name="checkMark" 
                                        Opacity="0"
                                        Data="M 2,8 L 5,12 L 14,3"
                                        Stroke="#8B4513" 
                                        StrokeThickness="2"
                                        Stretch="None"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                            Grid.Column="1"
                                            Focusable="False"
                                            HorizontalAlignment="Left"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Opacity" Value="1"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#edb658"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#f0c985"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#FFA000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#FFD54F"/>
                            <Setter Property="Foreground" Value="#A9A9A9"/>
                            <Setter TargetName="checkMark" Property="Stroke" Value="#A9A9A9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PushpinItemStyle" TargetType="map:MapItem">
        <Setter Property="AutoCollapse" Value="True"/>
        <Setter Property="Location" Value="{Binding Location}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="map:MapItem">
                    <map:Pushpin Content="{Binding Name}"
                                 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Foreground" Value="OrangeRed"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>